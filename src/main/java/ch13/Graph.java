/**
 *
 *                                                            Графы.
 * Граф как структура данных имеет много общего с деревом. Более того, в математическом смысле дерево является частным
 * случаем графа, но в программировании графы используются не так, как деревья. Строение графа часто определеяется
 * физической или абстрактной задачей. Например, узлы графа могут представлять города, а ребра - маршруты авиарейсов
 * между этими городами. При описании графов узлы принято называть вершинами, это связано с тем, что терминология графов
 * сформировалась несколько столетий назад в области математики, в то время как деревья больше привязаны к практичекому
 * программированию. На рисунке gr_1.png изображена упрощенная карта автострад в окрестностях Сан-Хосе. На рисунке
 * gr_2.png представлен граф, моделирующий дорожную сеть. На графе кружки соотвествуют дорожным развязкам (перекресткам),
 * а прямые линии, которыми эти кружки соединяются - дорожным сегментам. Кружки являются вершинами, а линии - ребрами
 * графа. Каждое ребро ограничено двумя вершинами на его концах. Граф не пытается представить географические координаты
 * отдельных городов, он только моделирует отношение между вершинами и ребрами, то есть, какие ребра соединяют те или
 * иные вершины. Граф не имеет отношения к физичеким расстояниям и направлениям. Кроме того, одно ребро может представлять
 * несколько автострад, как, например, ребро от I к H, представляющее дороги 101, 84 и 280.
 * Две верщины называются смежными, если они соединены одним ребром, так на рисунке gr_2.png вершины I и G являются
 * смжеными, а I и F нет. Вершины, смежные с некоторой вершиной называются ее соседями. Например, соседями G являются
 * I, H и F.
 * Путь представляет собой последовательность вершин. На рисунке gr_2.png путь от вершины B к вершине J, проходящий через
 * вершины A и E можно обозначить BAEJ. Между двумя вершинами может существовать более одного пути, например, от B к J
 * также можно добраться по пути BCDJ.
 * Граф называется связным, если от каждой вершины к любой другой вершине ведет хотя бы один путь. Если хотя бы до одной
 * вершины не добраться, то граф становится несвязным (gr_3.png).
 * На рисунках gr_1, gr_2 и gr_3 изображены ненаправленные графы. Иначе говоря, ребра таких графов не имеют направления;
 * перемещения по ним возможны в обоих направлениях, то есть алгоритм может пойти от вершины A к вершине B и наоборот.
 * Ненаправленные графы хорошо моделируют дорожную сеть, потому что по дорогам обычно можно ездить в обоих направлениях.
 * Однако, возможны и ситуации, при которых перемещение по ребру возможно только в одном направлении - от A к B, но не
 * от B к A, как, например, на улице с односторонним движением. Такие графы называются направленными или ориентированными.
 * Разрешенное направление обычно обозначается стрелкой в конце ребра.
 * На некоторых графах ребрам присваиваются веса - числа, представляющие физичееское расстояние между двумя вершинами,
 * время перехода от вершины к вершине, затраты топлива или денег на такой переход и т.д. Такие графы называются взвешенными.
 *
 *
 * */

package ch13;

public class Graph {
}
